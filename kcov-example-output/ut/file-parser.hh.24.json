var percent_low = 25;var percent_high = 75;
var header = { 'command' : 'ut', 'date' : '2014-06-09 19:19:23', 'instrumented' : 8, 'covered' : 5,};
var data = [
{'lineNum':'    1','line':'#pragma once','coverage':'           : ',},
{'lineNum':'    2','line':'','coverage':'           : ',},
{'lineNum':'    3','line':'#include <manager.hh>','coverage':'           : ',},
{'lineNum':'    4','line':'','coverage':'           : ',},
{'lineNum':'    5','line':'#include <sys/types.h>','coverage':'           : ',},
{'lineNum':'    6','line':'#include <stdint.h>','coverage':'           : ',},
{'lineNum':'    7','line':'','coverage':'           : ',},
{'lineNum':'    8','line':'#include <string>','coverage':'           : ',},
{'lineNum':'    9','line':'','coverage':'           : ',},
{'lineNum':'   10','line':'struct phdr_data_entry;','coverage':'           : ',},
{'lineNum':'   11','line':'','coverage':'           : ',},
{'lineNum':'   12','line':'namespace kcov','coverage':'           : ',},
{'lineNum':'   13','line':'{','coverage':'           : ',},
{'lineNum':'   14','line':'	class IFileParser','class':'linePartCov','coverage':'  2 /   3  : ',},
{'lineNum':'   15','line':'	{','coverage':'           : ',},
{'lineNum':'   16','line':'	public:','coverage':'           : ',},
{'lineNum':'   17','line':'		enum FileFlags','coverage':'           : ',},
{'lineNum':'   18','line':'		{','coverage':'           : ',},
{'lineNum':'   19','line':'			FLG_NONE = 0,','coverage':'           : ',},
{'lineNum':'   20','line':'			FLG_TYPE_SOLIB = 1,','coverage':'           : ',},
{'lineNum':'   21','line':'		};','coverage':'           : ',},
{'lineNum':'   22','line':'','coverage':'           : ',},
{'lineNum':'   23','line':'		class ILineListener','class':'linePartCov','coverage':'  2 /   3  : ',},
{'lineNum':'   24','line':'		{','coverage':'           : ',},
{'lineNum':'   25','line':'		public:','coverage':'           : ',},
{'lineNum':'   26','line':'			virtual void onLine(const std::string &file, unsigned int lineNr,','coverage':'           : ',},
{'lineNum':'   27','line':'					unsigned long addr) = 0;','coverage':'           : ',},
{'lineNum':'   28','line':'		};','coverage':'           : ',},
{'lineNum':'   29','line':'','coverage':'           : ',},
{'lineNum':'   30','line':'		class IFileListener','class':'linePartCov','coverage':'  2 /   3  : ',},
{'lineNum':'   31','line':'		{','coverage':'           : ',},
{'lineNum':'   32','line':'		public:','coverage':'           : ',},
{'lineNum':'   33','line':'			virtual void onFile(const std::string &file, enum FileFlags flags) = 0;','coverage':'           : ',},
{'lineNum':'   34','line':'		};','coverage':'           : ',},
{'lineNum':'   35','line':'','coverage':'           : ',},
{'lineNum':'   36','line':'		virtual bool addFile(const std::string &filename, struct phdr_data_entry *phdr_data = 0) = 0;','coverage':'           : ',},
{'lineNum':'   37','line':'','coverage':'           : ',},
{'lineNum':'   38','line':'		virtual ~IFileParser() {}','class':'linePartCov','coverage':'  2 /   5  : ',},
{'lineNum':'   39','line':'','coverage':'           : ',},
{'lineNum':'   40','line':'		virtual void registerLineListener(ILineListener &listener) = 0;','coverage':'           : ',},
{'lineNum':'   41','line':'','coverage':'           : ',},
{'lineNum':'   42','line':'		virtual void registerFileListener(IFileListener &listener) = 0;','coverage':'           : ',},
{'lineNum':'   43','line':'','coverage':'           : ',},
{'lineNum':'   44','line':'		virtual bool parse() = 0;','coverage':'           : ',},
{'lineNum':'   45','line':'','coverage':'           : ',},
{'lineNum':'   46','line':'		virtual uint64_t getChecksum() = 0;','coverage':'           : ',},
{'lineNum':'   47','line':'','coverage':'           : ',},
{'lineNum':'   48','line':'		virtual unsigned int matchParser(const std::string &filename, uint8_t *data, size_t dataSize) = 0;','coverage':'           : ',},
{'lineNum':'   49','line':'	};','coverage':'           : ',},
{'lineNum':'   50','line':'','coverage':'           : ',},
{'lineNum':'   51','line':'','coverage':'           : ',},
{'lineNum':'   52','line':'	/**','coverage':'           : ',},
{'lineNum':'   53','line':'	 * Manager class for getting one of multiple parsers, which can','coverage':'           : ',},
{'lineNum':'   54','line':'	 * match different file types.','coverage':'           : ',},
{'lineNum':'   55','line':'	 */','coverage':'           : ',},
{'lineNum':'   56','line':'	class IParserManager','class':'linePartCov','coverage':'  2 /   3  : ',},
{'lineNum':'   57','line':'	{','coverage':'           : ',},
{'lineNum':'   58','line':'	public:','coverage':'           : ',},
{'lineNum':'   59','line':'		virtual ~IParserManager()','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'   60','line':'		{','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   61','line':'		}','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'   62','line':'','coverage':'           : ',},
{'lineNum':'   63','line':'		virtual void registerParser(IFileParser &parser) = 0;','coverage':'           : ',},
{'lineNum':'   64','line':'','coverage':'           : ',},
{'lineNum':'   65','line':'		virtual IFileParser *matchParser(const std::string &file) = 0;','coverage':'           : ',},
{'lineNum':'   66','line':'','coverage':'           : ',},
{'lineNum':'   67','line':'		static IParserManager &getInstance();','coverage':'           : ',},
{'lineNum':'   68','line':'	};','coverage':'           : ',},
{'lineNum':'   69','line':'}','coverage':'           : ',},
];
var merged_data = [];
