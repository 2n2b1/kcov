var percent_low = 25;var percent_high = 75;
var header = { 'command' : 'ut', 'date' : '2014-06-09 19:19:23', 'instrumented' : 10, 'covered' : 7,};
var data = [
{'lineNum':'    1','line':'#pragma once','coverage':'           : ',},
{'lineNum':'    2','line':'','coverage':'           : ',},
{'lineNum':'    3','line':'#include <string>','coverage':'           : ',},
{'lineNum':'    4','line':'','coverage':'           : ',},
{'lineNum':'    5','line':'#include <stddef.h>','coverage':'           : ',},
{'lineNum':'    6','line':'','coverage':'           : ',},
{'lineNum':'    7','line':'namespace kcov','coverage':'           : ',},
{'lineNum':'    8','line':'{','coverage':'           : ',},
{'lineNum':'    9','line':'	class IFileParser;','coverage':'           : ',},
{'lineNum':'   10','line':'	class ICollector;','coverage':'           : ',},
{'lineNum':'   11','line':'	class IFilter;','coverage':'           : ',},
{'lineNum':'   12','line':'','coverage':'           : ',},
{'lineNum':'   13','line':'	class IReporter','class':'linePartCov','coverage':'  2 /   3  : ',},
{'lineNum':'   14','line':'	{','coverage':'           : ',},
{'lineNum':'   15','line':'	public:','coverage':'           : ',},
{'lineNum':'   16','line':'		class LineExecutionCount','coverage':'           : ',},
{'lineNum':'   17','line':'		{','coverage':'           : ',},
{'lineNum':'   18','line':'		public:','coverage':'           : ',},
{'lineNum':'   19','line':'			LineExecutionCount(unsigned int hits, unsigned int possibleHits) :','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   20','line':'				m_hits(hits), m_possibleHits(possibleHits)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   21','line':'			{','coverage':'           : ',},
{'lineNum':'   22','line':'			}','class':'linePartCov','coverage':'  1 /   2  : ',},
{'lineNum':'   23','line':'','coverage':'           : ',},
{'lineNum':'   24','line':'			unsigned int m_hits;','coverage':'           : ',},
{'lineNum':'   25','line':'			unsigned int m_possibleHits;','coverage':'           : ',},
{'lineNum':'   26','line':'		};','coverage':'           : ',},
{'lineNum':'   27','line':'','coverage':'           : ',},
{'lineNum':'   28','line':'		class ExecutionSummary','coverage':'           : ',},
{'lineNum':'   29','line':'		{','coverage':'           : ',},
{'lineNum':'   30','line':'		public:','coverage':'           : ',},
{'lineNum':'   31','line':'			ExecutionSummary() : m_lines(0), m_executedLines(0), m_includeInTotals(true)','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'   32','line':'			{','coverage':'           : ',},
{'lineNum':'   33','line':'			}','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'   34','line':'','coverage':'           : ',},
{'lineNum':'   35','line':'			ExecutionSummary(unsigned int lines, unsigned int executedLines) :','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   36','line':'				m_lines(lines), m_executedLines(executedLines), m_includeInTotals(true)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   37','line':'			{','coverage':'           : ',},
{'lineNum':'   38','line':'			}','class':'linePartCov','coverage':'  1 /   2  : ',},
{'lineNum':'   39','line':'','coverage':'           : ',},
{'lineNum':'   40','line':'			unsigned int m_lines;','coverage':'           : ',},
{'lineNum':'   41','line':'			unsigned int m_executedLines;','coverage':'           : ',},
{'lineNum':'   42','line':'			unsigned int m_includeInTotals;','coverage':'           : ',},
{'lineNum':'   43','line':'		};','coverage':'           : ',},
{'lineNum':'   44','line':'','coverage':'           : ',},
{'lineNum':'   45','line':'		virtual ~IReporter() {}','class':'lineNoCov','coverage':'  0 /   5  : ',},
{'lineNum':'   46','line':'','coverage':'           : ',},
{'lineNum':'   47','line':'		/**','coverage':'           : ',},
{'lineNum':'   48','line':'		 * Return if a file path should be included in the output.','coverage':'           : ',},
{'lineNum':'   49','line':'		 *','coverage':'           : ',},
{'lineNum':'   50','line':'		 * @param file the file path to check','coverage':'           : ',},
{'lineNum':'   51','line':'		 *','coverage':'           : ',},
{'lineNum':'   52','line':'		 * @return true if the file should be included in the output','coverage':'           : ',},
{'lineNum':'   53','line':'		 */','coverage':'           : ',},
{'lineNum':'   54','line':'		virtual bool fileIsIncluded(const std::string &file) = 0;','coverage':'           : ',},
{'lineNum':'   55','line':'','coverage':'           : ',},
{'lineNum':'   56','line':'		virtual bool lineIsCode(const std::string &file, unsigned int lineNr) = 0;','coverage':'           : ',},
{'lineNum':'   57','line':'','coverage':'           : ',},
{'lineNum':'   58','line':'		virtual LineExecutionCount getLineExecutionCount(const std::string &file, unsigned int lineNr) = 0;','coverage':'           : ',},
{'lineNum':'   59','line':'','coverage':'           : ',},
{'lineNum':'   60','line':'		virtual ExecutionSummary getExecutionSummary() = 0;','coverage':'           : ',},
{'lineNum':'   61','line':'','coverage':'           : ',},
{'lineNum':'   62','line':'		virtual void *marshal(size_t *szOut) = 0;','coverage':'           : ',},
{'lineNum':'   63','line':'','coverage':'           : ',},
{'lineNum':'   64','line':'		virtual bool unMarshal(void *data, size_t sz) = 0;','coverage':'           : ',},
{'lineNum':'   65','line':'','coverage':'           : ',},
{'lineNum':'   66','line':'		static IReporter &create(IFileParser &elf, ICollector &collector, IFilter &filter);','coverage':'           : ',},
{'lineNum':'   67','line':'	};','coverage':'           : ',},
{'lineNum':'   68','line':'}','coverage':'           : ',},
];
var merged_data = [];
