var percent_low = 25;var percent_high = 75;
var header = { 'command' : 'ut', 'date' : '2014-06-09 19:19:23', 'instrumented' : 174, 'covered' : 0,};
var data = [
{'lineNum':'    1','line':'#include <reporter.hh>','coverage':'           : ',},
{'lineNum':'    2','line':'#include <file-parser.hh>','coverage':'           : ',},
{'lineNum':'    3','line':'#include <configuration.hh>','coverage':'           : ',},
{'lineNum':'    4','line':'#include <writer.hh>','coverage':'           : ',},
{'lineNum':'    5','line':'#include <utils.hh>','coverage':'           : ',},
{'lineNum':'    6','line':'','coverage':'           : ',},
{'lineNum':'    7','line':'#include <sys/stat.h>','coverage':'           : ',},
{'lineNum':'    8','line':'#include <sys/types.h>','coverage':'           : ',},
{'lineNum':'    9','line':'#include <dirent.h>','coverage':'           : ',},
{'lineNum':'   10','line':'#include <stdio.h>','coverage':'           : ',},
{'lineNum':'   11','line':'#include <string>','coverage':'           : ',},
{'lineNum':'   12','line':'#include <list>','coverage':'           : ',},
{'lineNum':'   13','line':'#include <vector>','coverage':'           : ',},
{'lineNum':'   14','line':'#include <unordered_map>','coverage':'           : ',},
{'lineNum':'   15','line':'','coverage':'           : ',},
{'lineNum':'   16','line':'#include "writer-base.hh"','coverage':'           : ',},
{'lineNum':'   17','line':'','coverage':'           : ',},
{'lineNum':'   18','line':'using namespace kcov;','coverage':'           : ',},
{'lineNum':'   19','line':'','coverage':'           : ',},
{'lineNum':'   20','line':'// Generated','coverage':'           : ',},
{'lineNum':'   21','line':'extern std::vector<uint8_t> css_text_data;','coverage':'           : ',},
{'lineNum':'   22','line':'extern std::vector<uint8_t> icon_amber_data;','coverage':'           : ',},
{'lineNum':'   23','line':'extern std::vector<uint8_t> icon_glass_data;','coverage':'           : ',},
{'lineNum':'   24','line':'extern std::vector<uint8_t> source_file_text_data;','coverage':'           : ',},
{'lineNum':'   25','line':'extern std::vector<uint8_t> index_text_data;','coverage':'           : ',},
{'lineNum':'   26','line':'extern std::vector<uint8_t> tempo_text_data;','coverage':'           : ',},
{'lineNum':'   27','line':'extern std::vector<uint8_t> kcov_text_data;','coverage':'           : ',},
{'lineNum':'   28','line':'extern std::vector<uint8_t> jquery_text_data;','coverage':'           : ',},
{'lineNum':'   29','line':'extern std::vector<uint8_t> tablesorter_text_data;','coverage':'           : ',},
{'lineNum':'   30','line':'extern std::vector<uint8_t> tablesorter_widgets_text_data;','coverage':'           : ',},
{'lineNum':'   31','line':'extern std::vector<uint8_t> tablesorter_theme_text_data;','coverage':'           : ',},
{'lineNum':'   32','line':'','coverage':'           : ',},
{'lineNum':'   33','line':'','coverage':'           : ',},
{'lineNum':'   34','line':'class HtmlWriter : public WriterBase','class':'lineNoCov','coverage':'  0 /   8  : ',},
{'lineNum':'   35','line':'{','coverage':'           : ',},
{'lineNum':'   36','line':'public:','coverage':'           : ',},
{'lineNum':'   37','line':'	HtmlWriter(IFileParser &parser, IReporter &reporter,','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   38','line':'			const std::string &indexDirectory,','coverage':'           : ',},
{'lineNum':'   39','line':'			const std::string &outDirectory,','coverage':'           : ',},
{'lineNum':'   40','line':'			const std::string &name,','coverage':'           : ',},
{'lineNum':'   41','line':'			bool includeInTotals) :','coverage':'           : ',},
{'lineNum':'   42','line':'		WriterBase(parser, reporter),','coverage':'           : ',},
{'lineNum':'   43','line':'		m_outDirectory(outDirectory + "/"),','coverage':'           : ',},
{'lineNum':'   44','line':'		m_indexDirectory(indexDirectory + "/"),','coverage':'           : ',},
{'lineNum':'   45','line':'		m_summaryDbFileName(outDirectory + "/summary.db"),','coverage':'           : ',},
{'lineNum':'   46','line':'		m_name(name),','coverage':'           : ',},
{'lineNum':'   47','line':'		m_includeInTotals(includeInTotals)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   48','line':'	{','coverage':'           : ',},
{'lineNum':'   49','line':'	}','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'   50','line':'','coverage':'           : ',},
{'lineNum':'   51','line':'	void onStop()','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'   52','line':'	{','coverage':'           : ',},
{'lineNum':'   53','line':'	}','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   54','line':'','coverage':'           : ',},
{'lineNum':'   55','line':'private:','coverage':'           : ',},
{'lineNum':'   56','line':'','coverage':'           : ',},
{'lineNum':'   57','line':'	void writeOne(File *file)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   58','line':'	{','coverage':'           : ',},
{'lineNum':'   59','line':'		std::string jsonOutName = m_outDirectory + "/" + file->m_jsonOutFileName;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   60','line':'		std::string htmlOutName = m_outDirectory + "/" + file->m_outFileName;','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'   61','line':'		unsigned int nExecutedLines = 0;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   62','line':'		unsigned int nCodeLines = 0;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   63','line':'','coverage':'           : ',},
{'lineNum':'   64','line':'		std::string json;','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'   65','line':'','coverage':'           : ',},
{'lineNum':'   66','line':'		// Produce each line in the file','coverage':'           : ',},
{'lineNum':'   67','line':'		for (unsigned int n = 1; n < file->m_lastLineNr; n++) {','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'   68','line':'			const auto &line = file->m_lineMap[n];','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   69','line':'','coverage':'           : ',},
{'lineNum':'   70','line':'			IReporter::LineExecutionCount cnt =','coverage':'           : ',},
{'lineNum':'   71','line':'					m_reporter.getLineExecutionCount(file->m_name, n);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   72','line':'','coverage':'           : ',},
{'lineNum':'   73','line':'			// Update the execution count','coverage':'           : ',},
{'lineNum':'   74','line':'			file->m_executedLines = nExecutedLines;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   75','line':'			file->m_codeLines = nCodeLines;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   76','line':'','coverage':'           : ',},
{'lineNum':'   77','line':'			json += fmt(','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'   78','line':'					"{\'lineNum\':\'%5u\',"','coverage':'           : ',},
{'lineNum':'   79','line':'					"\'line\':\'%s\'",','coverage':'           : ',},
{'lineNum':'   80','line':'					n,','coverage':'           : ',},
{'lineNum':'   81','line':'					escape_json(line).c_str()','coverage':'           : ',},
{'lineNum':'   82','line':'					);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   83','line':'','coverage':'           : ',},
{'lineNum':'   84','line':'			if (m_reporter.lineIsCode(file->m_name, n)) {','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   85','line':'				std::string lineClass = "lineNoCov";','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   86','line':'','coverage':'           : ',},
{'lineNum':'   87','line':'				if (cnt.m_hits == cnt.m_possibleHits)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   88','line':'					lineClass = "lineCov";','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   89','line':'				else if (cnt.m_hits)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   90','line':'					lineClass = "linePartCov";','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   91','line':'','coverage':'           : ',},
{'lineNum':'   92','line':'				json += fmt(','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'   93','line':'					",\'class\':\'%s\',"','coverage':'           : ',},
{'lineNum':'   94','line':'					"\'coverage\':\'%3u / %3u  : \',",','coverage':'           : ',},
{'lineNum':'   95','line':'					lineClass.c_str(),','coverage':'           : ',},
{'lineNum':'   96','line':'					cnt.m_hits, cnt.m_possibleHits);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   97','line':'','coverage':'           : ',},
{'lineNum':'   98','line':'				nExecutedLines += !!cnt.m_hits;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   99','line':'				nCodeLines++;','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  100','line':'			} else {','coverage':'           : ',},
{'lineNum':'  101','line':'				json += ",\'coverage\':\'           : \',";','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  102','line':'			}','coverage':'           : ',},
{'lineNum':'  103','line':'			json += "},\\n";','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  104','line':'		}','coverage':'           : ',},
{'lineNum':'  105','line':'','coverage':'           : ',},
{'lineNum':'  106','line':'		// Add the header','coverage':'           : ',},
{'lineNum':'  107','line':'		json = getHeader(nCodeLines, nExecutedLines) + json + "];\\n" + "var merged_data = [];\\n";','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  108','line':'','coverage':'           : ',},
{'lineNum':'  109','line':'		// Produce HTML outfile','coverage':'           : ',},
{'lineNum':'  110','line':'		std::string html = fmt(','coverage':'           : ',},
{'lineNum':'  111','line':'				"<script type=\\"text/javascript\\" src=\\"%s\\"></script>\\n",','coverage':'           : ',},
{'lineNum':'  112','line':'				file->m_jsonOutFileName.c_str());','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'  113','line':'		html += std::string((const char *)source_file_text_data.data(), source_file_text_data.size());','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  114','line':'','coverage':'           : ',},
{'lineNum':'  115','line':'		// .. And write both files to disk','coverage':'           : ',},
{'lineNum':'  116','line':'		write_file((void *)json.c_str(), json.size(), "%s", jsonOutName.c_str());','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  117','line':'		write_file((void *)html.c_str(), html.size(), "%s", htmlOutName.c_str());','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'  118','line':'	}','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  119','line':'','coverage':'           : ',},
{'lineNum':'  120','line':'	void writeIndex()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  121','line':'	{','coverage':'           : ',},
{'lineNum':'  122','line':'		auto &conf = IConfiguration::getInstance();','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  123','line':'		unsigned int nTotalExecutedLines = 0;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  124','line':'		unsigned int nTotalCodeLines = 0;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  125','line':'','coverage':'           : ',},
{'lineNum':'  126','line':'		std::string json; // Not really json, but anyway','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  127','line':'','coverage':'           : ',},
{'lineNum':'  128','line':'		for (const auto &it : m_files) {','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  129','line':'			auto file = it.second;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  130','line':'			unsigned int nExecutedLines = file->m_executedLines;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  131','line':'			unsigned int nCodeLines = file->m_codeLines;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  132','line':'','coverage':'           : ',},
{'lineNum':'  133','line':'			nTotalCodeLines += nCodeLines;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  134','line':'			nTotalExecutedLines += nExecutedLines;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  135','line':'','coverage':'           : ',},
{'lineNum':'  136','line':'			std::string listName = file->m_name;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  137','line':'','coverage':'           : ',},
{'lineNum':'  138','line':'			size_t pos = listName.find(m_commonPath);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  139','line':'			unsigned int stripLevel = IConfiguration::getInstance().getPathStripLevel();','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  140','line':'','coverage':'           : ',},
{'lineNum':'  141','line':'			if (pos != std::string::npos && m_commonPath.size() != 0 && stripLevel != ~0U) {','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  142','line':'				std::string pathToRemove = m_commonPath;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  143','line':'','coverage':'           : ',},
{'lineNum':'  144','line':'				for (unsigned int i = 0; i < stripLevel; i++) {','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  145','line':'					size_t slashPos = pathToRemove.rfind("/");','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  146','line':'','coverage':'           : ',},
{'lineNum':'  147','line':'					if (slashPos == std::string::npos)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  148','line':'						break;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  149','line':'					pathToRemove = pathToRemove.substr(0, slashPos);','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  150','line':'				}','coverage':'           : ',},
{'lineNum':'  151','line':'','coverage':'           : ',},
{'lineNum':'  152','line':'				std::string prefix = "[...]";','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'  153','line':'','coverage':'           : ',},
{'lineNum':'  154','line':'				if (pathToRemove == "")','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  155','line':'					prefix = "";','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  156','line':'				listName = prefix + listName.substr(pathToRemove.size());','class':'lineNoCov','coverage':'  0 /   4  : ',},
{'lineNum':'  157','line':'			}','coverage':'           : ',},
{'lineNum':'  158','line':'','coverage':'           : ',},
{'lineNum':'  159','line':'			json += getIndexHeader(file->m_outFileName, file->m_fileName, listName, nCodeLines, nExecutedLines);','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  160','line':'		}','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  161','line':'','coverage':'           : ',},
{'lineNum':'  162','line':'','coverage':'           : ',},
{'lineNum':'  163','line':'		// Add the header','coverage':'           : ',},
{'lineNum':'  164','line':'		json =  fmt(','coverage':'           : ',},
{'lineNum':'  165','line':'				"var percent_low = %d;"','coverage':'           : ',},
{'lineNum':'  166','line':'				"var percent_high = %d;"','coverage':'           : ',},
{'lineNum':'  167','line':'				"\\n"','coverage':'           : ',},
{'lineNum':'  168','line':'				"var header = {"','coverage':'           : ',},
{'lineNum':'  169','line':'				" \'command\' : \'%s\',"','coverage':'           : ',},
{'lineNum':'  170','line':'				" \'date\' : \'%s\',"','coverage':'           : ',},
{'lineNum':'  171','line':'				" \'instrumented\' : %d,"','coverage':'           : ',},
{'lineNum':'  172','line':'				" \'covered\' : %d,"','coverage':'           : ',},
{'lineNum':'  173','line':'				"};"','coverage':'           : ',},
{'lineNum':'  174','line':'				"\\n"','coverage':'           : ',},
{'lineNum':'  175','line':'				"var data = [\\n",','coverage':'           : ',},
{'lineNum':'  176','line':'				conf.getLowLimit(),','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  177','line':'				conf.getHighLimit(),','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  178','line':'				escape_json(conf.getBinaryName()).c_str(),','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  179','line':'				getDateNow().c_str(),','coverage':'           : ',},
{'lineNum':'  180','line':'				nTotalCodeLines,','coverage':'           : ',},
{'lineNum':'  181','line':'				nTotalExecutedLines','coverage':'           : ',},
{'lineNum':'  182','line':'				) + json + "];\\n" +','class':'lineNoCov','coverage':'  0 /   6  : ',},
{'lineNum':'  183','line':'				"var merged_data = [];\\n";','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  184','line':'','coverage':'           : ',},
{'lineNum':'  185','line':'		// Produce HTML outfile','coverage':'           : ',},
{'lineNum':'  186','line':'		auto html = std::string((const char *)index_text_data.data(), index_text_data.size());','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'  187','line':'','coverage':'           : ',},
{'lineNum':'  188','line':'		// .. And write both files to disk','coverage':'           : ',},
{'lineNum':'  189','line':'		write_file((void *)json.c_str(), json.size(), "%s", (m_outDirectory + "index.json").c_str());','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  190','line':'		write_file((void *)html.c_str(), html.size(), "%s", (m_outDirectory + "index.html").c_str());','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  191','line':'','coverage':'           : ',},
{'lineNum':'  192','line':'		// Produce a summary','coverage':'           : ',},
{'lineNum':'  193','line':'		IReporter::ExecutionSummary summary = m_reporter.getExecutionSummary();','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  194','line':'		summary.m_includeInTotals = m_includeInTotals;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  195','line':'		size_t sz;','coverage':'           : ',},
{'lineNum':'  196','line':'','coverage':'           : ',},
{'lineNum':'  197','line':'		void *data = marshalSummary(summary,','coverage':'           : ',},
{'lineNum':'  198','line':'				m_name, &sz);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  199','line':'','coverage':'           : ',},
{'lineNum':'  200','line':'		if (data)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  201','line':'			write_file(data, sz, "%s", m_summaryDbFileName.c_str());','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  202','line':'','coverage':'           : ',},
{'lineNum':'  203','line':'		free(data);','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'  204','line':'	}','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  205','line':'','coverage':'           : ',},
{'lineNum':'  206','line':'	void writeGlobalIndex()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  207','line':'	{','coverage':'           : ',},
{'lineNum':'  208','line':'		DIR *dir;','coverage':'           : ',},
{'lineNum':'  209','line':'		struct dirent *de;','coverage':'           : ',},
{'lineNum':'  210','line':'		std::string idx = m_indexDirectory.c_str();','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  211','line':'		std::string s;','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'  212','line':'		unsigned int nTotalExecutedLines = 0;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  213','line':'		unsigned int nTotalCodeLines = 0;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  214','line':'','coverage':'           : ',},
{'lineNum':'  215','line':'		dir = opendir(idx.c_str());','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  216','line':'		panic_if(!dir, "Can\'t open directory %s\\n", idx.c_str());','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  217','line':'','coverage':'           : ',},
{'lineNum':'  218','line':'		std::string json;','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'  219','line':'		std::string merged;','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'  220','line':'','coverage':'           : ',},
{'lineNum':'  221','line':'		for (de = readdir(dir); de; de = readdir(dir)) {','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  222','line':'			std::string cur = idx + de->d_name + "/summary.db";','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  223','line':'','coverage':'           : ',},
{'lineNum':'  224','line':'			if (!file_exists(cur.c_str()))','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  225','line':'				continue;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  226','line':'','coverage':'           : ',},
{'lineNum':'  227','line':'			size_t sz;','coverage':'           : ',},
{'lineNum':'  228','line':'			void *data = read_file(&sz, "%s", cur.c_str());','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  229','line':'','coverage':'           : ',},
{'lineNum':'  230','line':'			if (!data)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  231','line':'				continue;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  232','line':'','coverage':'           : ',},
{'lineNum':'  233','line':'			IReporter::ExecutionSummary summary;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  234','line':'			std::string name;','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'  235','line':'			bool res = unMarshalSummary(data, sz, summary, name);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  236','line':'			free(data);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  237','line':'','coverage':'           : ',},
{'lineNum':'  238','line':'			if (!res)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  239','line':'				continue;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  240','line':'','coverage':'           : ',},
{'lineNum':'  241','line':'			// Skip entries (merged ones) that shouldn\'t be included in the totals','coverage':'           : ',},
{'lineNum':'  242','line':'			if (summary.m_includeInTotals) {','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  243','line':'				nTotalCodeLines += summary.m_lines;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  244','line':'				nTotalExecutedLines += summary.m_executedLines;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  245','line':'			}','coverage':'           : ',},
{'lineNum':'  246','line':'','coverage':'           : ',},
{'lineNum':'  247','line':'			std::string datum = getIndexHeader(fmt("%s/index.html", de->d_name), name, name, summary.m_lines, summary.m_executedLines);','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'  248','line':'','coverage':'           : ',},
{'lineNum':'  249','line':'			if (name == "[merged]")','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  250','line':'				merged += datum;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  251','line':'			else','coverage':'           : ',},
{'lineNum':'  252','line':'				json += datum;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  253','line':'		}','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  254','line':'','coverage':'           : ',},
{'lineNum':'  255','line':'		merged = "var merged_data = [" + merged + "];";','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  256','line':'','coverage':'           : ',},
{'lineNum':'  257','line':'		// Add the header','coverage':'           : ',},
{'lineNum':'  258','line':'		json = getHeader(nTotalCodeLines, nTotalExecutedLines) + json + "];\\n" + merged;','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  259','line':'','coverage':'           : ',},
{'lineNum':'  260','line':'		// Produce HTML outfile','coverage':'           : ',},
{'lineNum':'  261','line':'		auto html = std::string((const char *)index_text_data.data(), index_text_data.size());','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'  262','line':'','coverage':'           : ',},
{'lineNum':'  263','line':'		// .. And write both files to disk','coverage':'           : ',},
{'lineNum':'  264','line':'		write_file((void *)json.c_str(), json.size(), "%s", (m_indexDirectory + "index.json").c_str());','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  265','line':'		write_file((void *)html.c_str(), html.size(), "%s", (m_indexDirectory + "index.html").c_str());','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  266','line':'		closedir(dir);','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'  267','line':'	}','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  268','line':'','coverage':'           : ',},
{'lineNum':'  269','line':'	void write()','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'  270','line':'	{','coverage':'           : ',},
{'lineNum':'  271','line':'		for (const auto &it : m_files)','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  272','line':'			writeOne(it.second);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  273','line':'','coverage':'           : ',},
{'lineNum':'  274','line':'		setupCommonPaths();','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  275','line':'','coverage':'           : ',},
{'lineNum':'  276','line':'		writeIndex();','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  277','line':'','coverage':'           : ',},
{'lineNum':'  278','line':'		if (m_includeInTotals)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  279','line':'			writeGlobalIndex();','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  280','line':'	}','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  281','line':'','coverage':'           : ',},
{'lineNum':'  282','line':'','coverage':'           : ',},
{'lineNum':'  283','line':'	std::string getHeader(unsigned int lines, unsigned int executedLines)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  284','line':'	{','coverage':'           : ',},
{'lineNum':'  285','line':'		auto &conf = IConfiguration::getInstance();','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  286','line':'','coverage':'           : ',},
{'lineNum':'  287','line':'		return fmt(','coverage':'           : ',},
{'lineNum':'  288','line':'				"var percent_low = %d;"','coverage':'           : ',},
{'lineNum':'  289','line':'				"var percent_high = %d;"','coverage':'           : ',},
{'lineNum':'  290','line':'				"\\n"','coverage':'           : ',},
{'lineNum':'  291','line':'				"var header = {"','coverage':'           : ',},
{'lineNum':'  292','line':'				" \'command\' : \'%s\',"','coverage':'           : ',},
{'lineNum':'  293','line':'				" \'date\' : \'%s\',"','coverage':'           : ',},
{'lineNum':'  294','line':'				" \'instrumented\' : %d,"','coverage':'           : ',},
{'lineNum':'  295','line':'				" \'covered\' : %d,"','coverage':'           : ',},
{'lineNum':'  296','line':'				"};"','coverage':'           : ',},
{'lineNum':'  297','line':'				"\\n"','coverage':'           : ',},
{'lineNum':'  298','line':'				"var data = [\\n",','coverage':'           : ',},
{'lineNum':'  299','line':'				conf.getLowLimit(),','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  300','line':'				conf.getHighLimit(),','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  301','line':'				escape_json(conf.getBinaryName()).c_str(),','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  302','line':'				getDateNow().c_str(),','coverage':'           : ',},
{'lineNum':'  303','line':'				lines,','coverage':'           : ',},
{'lineNum':'  304','line':'				executedLines);','class':'lineNoCov','coverage':'  0 /   4  : ',},
{'lineNum':'  305','line':'	}','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  306','line':'','coverage':'           : ',},
{'lineNum':'  307','line':'	// Return a header for index-type JSON files','coverage':'           : ',},
{'lineNum':'  308','line':'	std::string getIndexHeader(const std::string &linkName, const std::string titleName,','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  309','line':'			const std::string summaryName, unsigned int lines, unsigned int executedLines)','coverage':'           : ',},
{'lineNum':'  310','line':'	{','coverage':'           : ',},
{'lineNum':'  311','line':'		double percent = 0;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  312','line':'','coverage':'           : ',},
{'lineNum':'  313','line':'		if (lines != 0)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  314','line':'			percent = (executedLines / (double)lines) * 100;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  315','line':'','coverage':'           : ',},
{'lineNum':'  316','line':'		return fmt(','coverage':'           : ',},
{'lineNum':'  317','line':'				"{\'link\':\'%s\',"','coverage':'           : ',},
{'lineNum':'  318','line':'				"\'title\':\'%s\',"','coverage':'           : ',},
{'lineNum':'  319','line':'				"\'summary_name\':\'%s\',"','coverage':'           : ',},
{'lineNum':'  320','line':'				"\'covered_class\':\'%s\',"','coverage':'           : ',},
{'lineNum':'  321','line':'				"\'covered\':\'%.1f\',"','coverage':'           : ',},
{'lineNum':'  322','line':'				"\'covered_lines\':\'%d\',"','coverage':'           : ',},
{'lineNum':'  323','line':'				"\'uncovered_lines\':\'%d\',"','coverage':'           : ',},
{'lineNum':'  324','line':'				"\'total_lines\' : \'%d\'},\\n",','coverage':'           : ',},
{'lineNum':'  325','line':'				linkName.c_str(),','coverage':'           : ',},
{'lineNum':'  326','line':'				titleName.c_str(),','coverage':'           : ',},
{'lineNum':'  327','line':'				summaryName.c_str(),','coverage':'           : ',},
{'lineNum':'  328','line':'				colorFromPercent(percent).c_str(),','coverage':'           : ',},
{'lineNum':'  329','line':'				percent,','coverage':'           : ',},
{'lineNum':'  330','line':'				executedLines,','coverage':'           : ',},
{'lineNum':'  331','line':'				lines - executedLines,','coverage':'           : ',},
{'lineNum':'  332','line':'				lines);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  333','line':'	}','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  334','line':'','coverage':'           : ',},
{'lineNum':'  335','line':'	std::string colorFromPercent(double percent)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  336','line':'	{','coverage':'           : ',},
{'lineNum':'  337','line':'		auto &conf = IConfiguration::getInstance();','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  338','line':'','coverage':'           : ',},
{'lineNum':'  339','line':'		if (percent >= conf.getHighLimit())','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  340','line':'			return "lineCov";','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  341','line':'		else if (percent > conf.getLowLimit())','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  342','line':'			return "linePartCov";','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  343','line':'','coverage':'           : ',},
{'lineNum':'  344','line':'		return "lineNoCov";','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  345','line':'	}','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  346','line':'','coverage':'           : ',},
{'lineNum':'  347','line':'	std::string getDateNow()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  348','line':'	{','coverage':'           : ',},
{'lineNum':'  349','line':'		time_t t;','coverage':'           : ',},
{'lineNum':'  350','line':'		struct tm *tm;','coverage':'           : ',},
{'lineNum':'  351','line':'		char date_buf[128];','coverage':'           : ',},
{'lineNum':'  352','line':'','coverage':'           : ',},
{'lineNum':'  353','line':'		t = time(nullptr);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  354','line':'		tm = localtime(&t);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  355','line':'		strftime(date_buf, sizeof(date_buf), "%Y-%m-%d %H:%M:%S", tm);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  356','line':'','coverage':'           : ',},
{'lineNum':'  357','line':'		return std::string(date_buf);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  358','line':'	}','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  359','line':'','coverage':'           : ',},
{'lineNum':'  360','line':'	void writeHelperFiles(std::string dir)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  361','line':'	{','coverage':'           : ',},
{'lineNum':'  362','line':'		write_file(icon_amber_data.data(), icon_amber_data.size(), "%s/amber.png", dir.c_str());','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  363','line':'		write_file(icon_glass_data.data(), icon_glass_data.size(), "%s/glass.png", dir.c_str());','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  364','line':'		write_file(css_text_data.data(), css_text_data.size(), "%s/bcov.css", dir.c_str());','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  365','line':'','coverage':'           : ',},
{'lineNum':'  366','line':'		mkdir(fmt("%s/data", dir.c_str()).c_str(), 0755);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  367','line':'		mkdir(fmt("%s/data/js", dir.c_str()).c_str(), 0755);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  368','line':'		write_file(icon_amber_data.data(), icon_amber_data.size(), "%s/data/amber.png", dir.c_str());','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  369','line':'		write_file(icon_glass_data.data(), icon_glass_data.size(), "%s/data/glass.png", dir.c_str());','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  370','line':'		write_file(css_text_data.data(), css_text_data.size(), "%s/data/bcov.css", dir.c_str());','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  371','line':'		write_file(tempo_text_data.data(), tempo_text_data.size(), "%s/data/js/tempo.min.js", dir.c_str());','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  372','line':'		write_file(kcov_text_data.data(), kcov_text_data.size(), "%s/data/js/kcov.js", dir.c_str());','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  373','line':'		write_file(jquery_text_data.data(), jquery_text_data.size(), "%s/data/js/jquery.min.js", dir.c_str());','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  374','line':'		write_file(tablesorter_text_data.data(), tablesorter_text_data.size(), "%s/data/js/tablesorter.min.js", dir.c_str());','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  375','line':'		write_file(tablesorter_widgets_text_data.data(), tablesorter_widgets_text_data.size(), "%s/data/js/jquery.tablesorter.widgets.min.js", dir.c_str());','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  376','line':'		write_file(tablesorter_theme_text_data.data(), tablesorter_theme_text_data.size(), "%s/data/tablesorter-theme.css", dir.c_str());','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  377','line':'	}','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  378','line':'','coverage':'           : ',},
{'lineNum':'  379','line':'	void onStartup()','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'  380','line':'	{','coverage':'           : ',},
{'lineNum':'  381','line':'		writeHelperFiles(m_indexDirectory);','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  382','line':'		writeHelperFiles(m_outDirectory);','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  383','line':'	}','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  384','line':'','coverage':'           : ',},
{'lineNum':'  385','line':'','coverage':'           : ',},
{'lineNum':'  386','line':'	std::string m_outDirectory;','coverage':'           : ',},
{'lineNum':'  387','line':'	std::string m_indexDirectory;','coverage':'           : ',},
{'lineNum':'  388','line':'	std::string m_summaryDbFileName;','coverage':'           : ',},
{'lineNum':'  389','line':'	std::string m_name;','coverage':'           : ',},
{'lineNum':'  390','line':'	bool m_includeInTotals;','coverage':'           : ',},
{'lineNum':'  391','line':'};','coverage':'           : ',},
{'lineNum':'  392','line':'','coverage':'           : ',},
{'lineNum':'  393','line':'namespace kcov','coverage':'           : ',},
{'lineNum':'  394','line':'{','coverage':'           : ',},
{'lineNum':'  395','line':'	IWriter &createHtmlWriter(IFileParser &parser, IReporter &reporter,','coverage':'           : ',},
{'lineNum':'  396','line':'			const std::string &indexDirectory,','coverage':'           : ',},
{'lineNum':'  397','line':'			const std::string &outDirectory,','coverage':'           : ',},
{'lineNum':'  398','line':'			const std::string &name,','coverage':'           : ',},
{'lineNum':'  399','line':'			bool includeInTotals)','coverage':'           : ',},
{'lineNum':'  400','line':'	{','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  401','line':'		return *new HtmlWriter(parser, reporter, indexDirectory, outDirectory,','coverage':'           : ',},
{'lineNum':'  402','line':'				name, includeInTotals);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  403','line':'	}','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  404','line':'}','coverage':'           : ',},
];
var merged_data = [];
