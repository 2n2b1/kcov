var percent_low = 25;var percent_high = 75;
var header = { 'command' : 'ut', 'date' : '2014-06-09 19:19:23', 'instrumented' : 59, 'covered' : 0,};
var data = [
{'lineNum':'    1','line':'#include <output-handler.hh>','coverage':'           : ',},
{'lineNum':'    2','line':'#include <writer.hh>','coverage':'           : ',},
{'lineNum':'    3','line':'#include <configuration.hh>','coverage':'           : ',},
{'lineNum':'    4','line':'#include <reporter.hh>','coverage':'           : ',},
{'lineNum':'    5','line':'#include <file-parser.hh>','coverage':'           : ',},
{'lineNum':'    6','line':'#include <utils.hh>','coverage':'           : ',},
{'lineNum':'    7','line':'','coverage':'           : ',},
{'lineNum':'    8','line':'#include <thread>','coverage':'           : ',},
{'lineNum':'    9','line':'#include <list>','coverage':'           : ',},
{'lineNum':'   10','line':'','coverage':'           : ',},
{'lineNum':'   11','line':'#include <sys/stat.h>','coverage':'           : ',},
{'lineNum':'   12','line':'#include <sys/types.h>','coverage':'           : ',},
{'lineNum':'   13','line':'#include <unistd.h>','coverage':'           : ',},
{'lineNum':'   14','line':'#include <signal.h>','coverage':'           : ',},
{'lineNum':'   15','line':'#include <dirent.h>','coverage':'           : ',},
{'lineNum':'   16','line':'','coverage':'           : ',},
{'lineNum':'   17','line':'namespace kcov','coverage':'           : ',},
{'lineNum':'   18','line':'{','coverage':'           : ',},
{'lineNum':'   19','line':'	class OutputHandler : public IOutputHandler, IFileParser::IFileListener','coverage':'           : ',},
{'lineNum':'   20','line':'	{','coverage':'           : ',},
{'lineNum':'   21','line':'	public:','coverage':'           : ',},
{'lineNum':'   22','line':'		OutputHandler(IFileParser &parser, IReporter &reporter) :','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   23','line':'			m_reporter(reporter),','coverage':'           : ',},
{'lineNum':'   24','line':'			m_unmarshalSize(0),','coverage':'           : ',},
{'lineNum':'   25','line':'			m_unmarshalData(NULL)','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'   26','line':'		{','coverage':'           : ',},
{'lineNum':'   27','line':'			IConfiguration &conf = IConfiguration::getInstance();','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   28','line':'','coverage':'           : ',},
{'lineNum':'   29','line':'			m_baseDirectory = conf.getOutDirectory();','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   30','line':'			m_outDirectory = m_baseDirectory + conf.getBinaryName() + "/";','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'   31','line':'			m_dbFileName = m_outDirectory + "/coverage.db";','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'   32','line':'			m_summaryDbFileName = m_outDirectory + "/summary.db";','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'   33','line':'','coverage':'           : ',},
{'lineNum':'   34','line':'			mkdir(m_baseDirectory.c_str(), 0755);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   35','line':'			mkdir(m_outDirectory.c_str(), 0755);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   36','line':'','coverage':'           : ',},
{'lineNum':'   37','line':'			parser.registerFileListener(*this);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   38','line':'		}','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'   39','line':'','coverage':'           : ',},
{'lineNum':'   40','line':'		~OutputHandler()','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'   41','line':'		{','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'   42','line':'			stop();','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   43','line':'			free(m_unmarshalData);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   44','line':'		}','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'   45','line':'','coverage':'           : ',},
{'lineNum':'   46','line':'		const std::string &getBaseDirectory()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   47','line':'		{','coverage':'           : ',},
{'lineNum':'   48','line':'			return m_baseDirectory;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   49','line':'		}','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'   50','line':'','coverage':'           : ',},
{'lineNum':'   51','line':'','coverage':'           : ',},
{'lineNum':'   52','line':'		const std::string &getOutDirectory()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   53','line':'		{','coverage':'           : ',},
{'lineNum':'   54','line':'			return m_outDirectory;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   55','line':'		}','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'   56','line':'','coverage':'           : ',},
{'lineNum':'   57','line':'		void registerWriter(IWriter &writer)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   58','line':'		{','coverage':'           : ',},
{'lineNum':'   59','line':'			m_writers.push_back(&writer);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   60','line':'		}','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'   61','line':'','coverage':'           : ',},
{'lineNum':'   62','line':'		// From IElf::IFileListener','coverage':'           : ',},
{'lineNum':'   63','line':'		void onFile(const std::string &file, enum IFileParser::FileFlags flags)','class':'lineNoCov','coverage':'  0 /   3  : ',},
{'lineNum':'   64','line':'		{','coverage':'           : ',},
{'lineNum':'   65','line':'			// Only unmarshal the main file','coverage':'           : ',},
{'lineNum':'   66','line':'			if (flags & IFileParser::FLG_TYPE_SOLIB)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   67','line':'				return;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   68','line':'','coverage':'           : ',},
{'lineNum':'   69','line':'			if (!m_unmarshalData)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   70','line':'				m_unmarshalData = read_file(&m_unmarshalSize, "%s", m_dbFileName.c_str());','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   71','line':'','coverage':'           : ',},
{'lineNum':'   72','line':'			if (m_unmarshalData) {','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   73','line':'				if (!m_reporter.unMarshal(m_unmarshalData, m_unmarshalSize))','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   74','line':'					kcov_debug(INFO_MSG, "Can\'t unmarshal %s\\n", m_dbFileName.c_str());','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   75','line':'			}','coverage':'           : ',},
{'lineNum':'   76','line':'		}','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   77','line':'','coverage':'           : ',},
{'lineNum':'   78','line':'		void start()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   79','line':'		{','coverage':'           : ',},
{'lineNum':'   80','line':'			for (const auto &it : m_writers)','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'   81','line':'				it->onStartup();','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   82','line':'		}','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'   83','line':'','coverage':'           : ',},
{'lineNum':'   84','line':'		void stop()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   85','line':'		{','coverage':'           : ',},
{'lineNum':'   86','line':'			size_t sz;','coverage':'           : ',},
{'lineNum':'   87','line':'			void *data = m_reporter.marshal(&sz);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   88','line':'','coverage':'           : ',},
{'lineNum':'   89','line':'			if (data)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   90','line':'				write_file(data, sz, "%s", m_dbFileName.c_str());','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   91','line':'','coverage':'           : ',},
{'lineNum':'   92','line':'			free(data);','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   93','line':'','coverage':'           : ',},
{'lineNum':'   94','line':'			for (const auto &it : m_writers)','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'   95','line':'				it->onStop();','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   96','line':'','coverage':'           : ',},
{'lineNum':'   97','line':'			// Produce output after stop if anyone yields new data in onStop()','coverage':'           : ',},
{'lineNum':'   98','line':'			produce();','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   99','line':'		}','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  100','line':'','coverage':'           : ',},
{'lineNum':'  101','line':'		void produce()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  102','line':'		{','coverage':'           : ',},
{'lineNum':'  103','line':'			for (const auto &it : m_writers)','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  104','line':'				it->write();','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  105','line':'		}','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  106','line':'','coverage':'           : ',},
{'lineNum':'  107','line':'','coverage':'           : ',},
{'lineNum':'  108','line':'	private:','coverage':'           : ',},
{'lineNum':'  109','line':'		typedef std::list<IWriter *> WriterList_t;','coverage':'           : ',},
{'lineNum':'  110','line':'','coverage':'           : ',},
{'lineNum':'  111','line':'		IReporter &m_reporter;','coverage':'           : ',},
{'lineNum':'  112','line':'','coverage':'           : ',},
{'lineNum':'  113','line':'		std::string m_outDirectory;','coverage':'           : ',},
{'lineNum':'  114','line':'		std::string m_baseDirectory;','coverage':'           : ',},
{'lineNum':'  115','line':'		std::string m_dbFileName;','coverage':'           : ',},
{'lineNum':'  116','line':'		std::string m_summaryDbFileName;','coverage':'           : ',},
{'lineNum':'  117','line':'','coverage':'           : ',},
{'lineNum':'  118','line':'		WriterList_t m_writers;','coverage':'           : ',},
{'lineNum':'  119','line':'','coverage':'           : ',},
{'lineNum':'  120','line':'		size_t m_unmarshalSize;','coverage':'           : ',},
{'lineNum':'  121','line':'		void *m_unmarshalData;','coverage':'           : ',},
{'lineNum':'  122','line':'	};','coverage':'           : ',},
{'lineNum':'  123','line':'','coverage':'           : ',},
{'lineNum':'  124','line':'	static OutputHandler *instance;','coverage':'           : ',},
{'lineNum':'  125','line':'	IOutputHandler &IOutputHandler::create(IFileParser &parser, IReporter &reporter)','coverage':'           : ',},
{'lineNum':'  126','line':'	{','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  127','line':'		if (!instance)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  128','line':'			instance = new OutputHandler(parser, reporter);','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  129','line':'','coverage':'           : ',},
{'lineNum':'  130','line':'		return *instance;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  131','line':'	}','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  132','line':'','coverage':'           : ',},
{'lineNum':'  133','line':'	IOutputHandler &IOutputHandler::getInstance()','coverage':'           : ',},
{'lineNum':'  134','line':'	{','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  135','line':'		return *instance;','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  136','line':'	}','class':'lineNoCov','coverage':'  0 /   2  : ',},
{'lineNum':'  137','line':'}','coverage':'           : ',},
];
var merged_data = [];
