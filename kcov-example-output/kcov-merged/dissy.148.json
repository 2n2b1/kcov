var percent_low = 25;var percent_high = 75;
var header = { 'command' : 'ut', 'date' : '2014-06-09 19:19:23', 'instrumented' : 500, 'covered' : 205,};
var data = [
{'lineNum':'    1','line':'#!/usr/bin/python','coverage':'           : ',},
{'lineNum':'    2','line':'######################################################################','coverage':'           : ',},
{'lineNum':'    3','line':'##','coverage':'           : ',},
{'lineNum':'    4','line':'## Copyright (C) 2006,  Blekinge Institute of Technology','coverage':'           : ',},
{'lineNum':'    5','line':'##','coverage':'           : ',},
{'lineNum':'    6','line':'## Author:        Simon Kagstrom <simon.kagstrom@gmail.com>','coverage':'           : ',},
{'lineNum':'    7','line':'## Description:   The main program','coverage':'           : ',},
{'lineNum':'    8','line':'##','coverage':'           : ',},
{'lineNum':'    9','line':'## Licensed under the terms of GNU General Public License version 2','coverage':'           : ',},
{'lineNum':'   10','line':'## (or later, at your option). See COPYING file distributed with Dissy','coverage':'           : ',},
{'lineNum':'   11','line':'## for full text of the license.','coverage':'           : ',},
{'lineNum':'   12','line':'##','coverage':'           : ',},
{'lineNum':'   13','line':'######################################################################','coverage':'           : ',},
{'lineNum':'   14','line':'import pygtk, pango, getopt, sys, os, cgi, re','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   15','line':'','coverage':'           : ',},
{'lineNum':'   16','line':'sys.path.append(".")','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   17','line':'sys.path = [\'/home/ska/projects/dissy/trunk/\'] + sys.path','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   18','line':'','coverage':'           : ',},
{'lineNum':'   19','line':'pygtk.require(\'2.0\')','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   20','line':'import gtk, gobject','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   21','line':'gtk.gdk.threads_init()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   22','line':'','coverage':'           : ',},
{'lineNum':'   23','line':'from dissy.Config import *','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   24','line':'from dissy.File import File, ExportedFile','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   25','line':'from dissy.File import linuxKernelCrashRegexp','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   26','line':'from dissy.Entity import Entity','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   27','line':'from dissy.StrEntity import StrEntity','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   28','line':'from dissy.Instruction import Instruction','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   29','line':'from dissy.Function import Function','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   30','line':'from dissy.PreferencesDialogue import PreferencesDialogue','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   31','line':'from dissy.history import History','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   32','line':'from dissy import FunctionModel','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   33','line':'from dissy import InstructionModel','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   34','line':'from dissy import InstructionModelHighlighter','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   35','line':'from dissy.InfoBox import InfoBox','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   36','line':'','coverage':'           : ',},
{'lineNum':'   37','line':'#Value analysis requires the WALi python bindings','coverage':'           : ',},
{'lineNum':'   38','line':'enable_value_analysis = False','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   39','line':'try:','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   40','line':'    import wali','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   41','line':'    print \'Enabling value analysis\'','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   42','line':'    enable_value_analysis = True','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   43','line':'    from dissy.ValueAnalysisInfoProvider import ValueAnalysisInfoProvider','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   44','line':'except:','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   45','line':'    pass','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   46','line':'','coverage':'           : ',},
{'lineNum':'   47','line':'NUM_JUMP_COLUMNS=3','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   48','line':'','coverage':'           : ',},
{'lineNum':'   49','line':'# Navigation history','coverage':'           : ',},
{'lineNum':'   50','line':'history = History()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   51','line':'','coverage':'           : ',},
{'lineNum':'   52','line':'class GUI_Controller:','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   53','line':'    """ The GUI class is the controller for Dissy """','coverage':'           : ',},
{'lineNum':'   54','line':'','coverage':'           : ',},
{'lineNum':'   55','line':'    def __init__(self, inFile=None):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   56','line':'        if inFile == None:','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   57','line':'            inFile = ""','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   58','line':'        self.fileContainer = File(baseAddress=baseAddress)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   59','line':'','coverage':'           : ',},
{'lineNum':'   60','line':'        icon = None','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   61','line':'        icon_name = lookupFile(\'gfx/icon.svg\')','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   62','line':'        if icon_name != None:','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   63','line':'            icon = gtk.gdk.pixbuf_new_from_file(icon_name)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   64','line':'            icon = icon.scale_simple(64, 64, gtk.gdk.INTERP_BILINEAR)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   65','line':'','coverage':'           : ',},
{'lineNum':'   66','line':'        #GUI setup from gtk.Builder','coverage':'           : ',},
{'lineNum':'   67','line':'        builder = gtk.Builder()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   68','line':'        ui_file_name = lookupFile("dissy.ui")','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   69','line':'        if ui_file_name == None:','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   70','line':'            sys.stderr.write("Cannot find the dissy UI definition file (dissy.ui)\\n")','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   71','line':'            sys.exit(1)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   72','line':'        builder.add_from_file(ui_file_name)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   73','line':'        self.root = builder.get_object(\'mainWindow\')','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   74','line':'        self.root.set_title("%s - %s" % (PROGRAM_NAME, inFile))','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   75','line':'        self.root.set_icon(icon)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   76','line':'        builder.connect_signals(self)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   77','line':'        self.root.show_all()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   78','line':'','coverage':'           : ',},
{'lineNum':'   79','line':'        #setup infobox','coverage':'           : ',},
{'lineNum':'   80','line':'        self.vboxInfoBox = builder.get_object(\'vboxInfoBox\')','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   81','line':'        self.infoBox = InfoBox()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   82','line':'        scrwInfoBox = builder.get_object(\'scrwInfoBox\')','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   83','line':'        scrwInfoBox.add(self.infoBox)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   84','line':'        scrwInfoBox.show_all()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   85','line':'','coverage':'           : ',},
{'lineNum':'   86','line':'        lookupCombo = builder.get_object(\'lookupCombo\')','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   87','line':'        liststore = gtk.ListStore(gobject.TYPE_STRING)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   88','line':'        lookupCombo.set_model(liststore)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   89','line':'        lookupCombo.set_text_column(0)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   90','line':'        lookupCombo.child.connect("activate", self.pasteBinEntryActivated, lookupCombo)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   91','line':'        lookupCombo.connect("changed", self.pasteBinChanged, lookupCombo)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   92','line':'','coverage':'           : ',},
{'lineNum':'   93','line':'        highlightEntry = builder.get_object(\'highlightEntry\')','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   94','line':'        highlightEntry.connect("activate", self.patternMatchBinCallback, highlightEntry)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   95','line':'','coverage':'           : ',},
{'lineNum':'   96','line':'        self.vpaned = builder.get_object(\'vpaned\')','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   97','line':'        self.vpaned.set_position(650/3)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   98','line':'        self.hpaned_down = builder.get_object(\'hpaned\')','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   99','line':'        self.hpaned_down.set_position(900/3*2)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  100','line':'','coverage':'           : ',},
{'lineNum':'  101','line':'        #Set shortcuts, that doesn\'t work from Gtk.Builder','coverage':'           : ',},
{'lineNum':'  102','line':'        accelgroupMainWin = builder.get_object(\'accelgroupMainWin\')','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  103','line':'        builder.get_object(\'mnuShowSource\').add_accelerator(\'activate\', accelgroupMainWin, ord(\'u\'),','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  104','line':'            gtk.gdk.CONTROL_MASK, gtk.ACCEL_VISIBLE)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  105','line':'        builder.get_object(\'navBack\').add_accelerator(\'activate\', accelgroupMainWin,','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  106','line':'            gtk.gdk.keyval_from_name(\'Left\'),','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  107','line':'            gtk.gdk.MOD1_MASK, gtk.ACCEL_VISIBLE)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  108','line':'        builder.get_object(\'navForward\').add_accelerator(\'activate\', accelgroupMainWin,','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  109','line':'            gtk.gdk.keyval_from_name(\'Right\'),','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  110','line':'            gtk.gdk.MOD1_MASK, gtk.ACCEL_VISIBLE)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  111','line':'','coverage':'           : ',},
{'lineNum':'  112','line':'        # Get the model and attach it to the view','coverage':'           : ',},
{'lineNum':'  113','line':'        self.searchwordHighlighter = InstructionModelHighlighter.SearchwordHighlighter()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  114','line':'        self.conditionFlagHighlighter = InstructionModelHighlighter.ConditionFlagHighlighter()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  115','line':'        self.highlighters = [','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  116','line':'            self.searchwordHighlighter,','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  117','line':'            self.conditionFlagHighlighter,','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  118','line':'        ]','coverage':'           : ',},
{'lineNum':'  119','line':'','coverage':'           : ',},
{'lineNum':'  120','line':'        self.enableValueAnalysis(builder)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  121','line':'','coverage':'           : ',},
{'lineNum':'  122','line':'        # Setup focus chains (no tab-to-focus in the information box)','coverage':'           : ',},
{'lineNum':'  123','line':'        builder.get_object(\'vboxMain\').set_focus_chain([ self.vpaned ])','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  124','line':'        self.hpaned_down.set_focus_chain([ builder.get_object(\'scrwInstruction\') ])','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  125','line':'','coverage':'           : ',},
{'lineNum':'  126','line':'        self.instructionView = builder.get_object(\'instructionView\')','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  127','line':'        self.instructionController = InstructionViewController(self, self.instructionView)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  128','line':'','coverage':'           : ',},
{'lineNum':'  129','line':'        self.functionView = builder.get_object(\'functionView\')','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  130','line':'        self.functionController = FunctionViewController(self, self.functionView,','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  131','line':'            self.instructionController)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  132','line':'','coverage':'           : ',},
{'lineNum':'  133','line':'        #Load settings','coverage':'           : ',},
{'lineNum':'  134','line':'        self.loading = True','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  135','line':'        builder.get_object(\'actionShowInformationBox\').set_active(config.showInstructionInformationBox)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  136','line':'        builder.get_object(\'actionShowSource\').set_active(config.showHighLevelCode)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  137','line':'        self.setInformationBoxVisible()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  138','line':'        self.loading = False','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  139','line':'        if inFile:','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  140','line':'            self.loadFile(inFile)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  141','line':'','coverage':'           : ',},
{'lineNum':'  142','line':'        self.root.resize(config.width, config.height)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  143','line':'','coverage':'           : ',},
{'lineNum':'  144','line':'    def on_navBack_activate(self, widget):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  145','line':'        try:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  146','line':'            val = history.back()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  147','line':'        except:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  148','line':'            return','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  149','line':'        return self.lookupFunction(val)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  150','line':'','coverage':'           : ',},
{'lineNum':'  151','line':'    def on_navForward_activate(self, widget):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  152','line':'        try:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  153','line':'            val = history.forward()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  154','line':'        except:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  155','line':'            return','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  156','line':'        return self.lookupFunction(val)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  157','line':'','coverage':'           : ',},
{'lineNum':'  158','line':'    def on_quit(self, widget=None):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  159','line':'        config.width, config.height = self.root.get_size()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  160','line':'        config.save()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  161','line':'        gtk.main_quit()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  162','line':'        return','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  163','line':'','coverage':'           : ',},
{'lineNum':'  164','line':'    def on_mnuSave_activate(self, widget):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  165','line':'        #TODO - refactor file handling','coverage':'           : ',},
{'lineNum':'  166','line':'        pass','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  167','line':'','coverage':'           : ',},
{'lineNum':'  168','line':'    def on_mnuOpen_activate(self, widget):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  169','line':'        file_open_dialog = gtk.FileChooserDialog(title="Open object file",','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  170','line':'            action=gtk.FILE_CHOOSER_ACTION_OPEN,','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  171','line':'                buttons=(gtk.STOCK_CANCEL,','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  172','line':'                        gtk.RESPONSE_CANCEL,','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  173','line':'                        gtk.STOCK_OPEN,','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  174','line':'                        gtk.RESPONSE_OK))','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  175','line':'        filter = gtk.FileFilter()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  176','line':'        filter.set_name("Object files")','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  177','line':'        filter.add_pattern("*.o")','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  178','line':'        filter.add_mime_type("application/x-object")','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  179','line':'        filter.add_mime_type("application/x-executable")','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  180','line':'        file_open_dialog.add_filter(filter)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  181','line':'','coverage':'           : ',},
{'lineNum':'  182','line':'        filter = gtk.FileFilter()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  183','line':'        filter.set_name("Dissy exported files (*.dissy)")','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  184','line':'        filter.add_pattern("*.dissy")','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  185','line':'        file_open_dialog.add_filter(filter)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  186','line':'','coverage':'           : ',},
{'lineNum':'  187','line':'        filter = gtk.FileFilter()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  188','line':'        filter.set_name("All files")','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  189','line':'        filter.add_pattern("*")','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  190','line':'        file_open_dialog.add_filter(filter)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  191','line':'','coverage':'           : ',},
{'lineNum':'  192','line':'        if file_open_dialog.run() == gtk.RESPONSE_OK:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  193','line':'            filename = file_open_dialog.get_filename()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  194','line':'            self.loadFile(filename)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  195','line':'            file_open_dialog.destroy()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  196','line':'        else:','coverage':'           : ',},
{'lineNum':'  197','line':'            file_open_dialog.destroy()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  198','line':'','coverage':'           : ',},
{'lineNum':'  199','line':'    def on_mnuReload_activate(self, widget):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  200','line':'        self.loadFile()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  201','line':'','coverage':'           : ',},
{'lineNum':'  202','line':'    def loadFile(self, filename=None):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  203','line':'        global enable_value_analysis','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  204','line':'        if filename == None:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  205','line':'            if not self.fileContainer:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  206','line':'                return','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  207','line':'            filename = self.fileContainer.filename','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  208','line':'','coverage':'           : ',},
{'lineNum':'  209','line':'        self.root.set_title("%s - %s" % (PROGRAM_NAME, filename))','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  210','line':'        if filename.endswith(\'.dissy\'):','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  211','line':'            self.fileContainer = ExportedFile(filename, baseAddress=baseAddress)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  212','line':'        else:','coverage':'           : ',},
{'lineNum':'  213','line':'            self.fileContainer = File(filename, baseAddress=baseAddress)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  214','line':'        self.functionView.set_model( FunctionModel.InfoModel(self.fileContainer).getModel() )','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  215','line':'        if enable_value_analysis:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  216','line':'            self.valueAnalysisInfoProvider = ValueAnalysisInfoProvider(self.fileContainer)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  217','line':'','coverage':'           : ',},
{'lineNum':'  218','line':'    def on_mnuSaveAs_activate(self, widget):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  219','line':'        file_save_dialog = gtk.FileChooserDialog(title="Export file",','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  220','line':'            action=gtk.FILE_CHOOSER_ACTION_SAVE,','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  221','line':'                buttons=(gtk.STOCK_CANCEL,','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  222','line':'                        gtk.RESPONSE_CANCEL,','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  223','line':'                        gtk.STOCK_SAVE,','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  224','line':'                        gtk.RESPONSE_OK))','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  225','line':'        filter = gtk.FileFilter()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  226','line':'        filter.set_name("Dissy exported files (*.dissy)")','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  227','line':'        filter.add_pattern("*.dissy")','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  228','line':'        file_save_dialog.add_filter(filter)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  229','line':'','coverage':'           : ',},
{'lineNum':'  230','line':'        if file_save_dialog.run() == gtk.RESPONSE_OK:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  231','line':'            filename = file_save_dialog.get_filename()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  232','line':'            file_save_dialog.destroy()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  233','line':'        else:','coverage':'           : ',},
{'lineNum':'  234','line':'            file_save_dialog.destroy()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  235','line':'            return','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  236','line':'','coverage':'           : ',},
{'lineNum':'  237','line':'        if not filename.endswith(\'.dissy\'):','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  238','line':'            filename += \'.dissy\'','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  239','line':'','coverage':'           : ',},
{'lineNum':'  240','line':'        f = open(filename, \'wb\')','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  241','line':'        expfile = self.fileContainer.toExportedFile()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  242','line':'        expfile.saveTo(f)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  243','line':'        f.close()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  244','line':'','coverage':'           : ',},
{'lineNum':'  245','line':'    def on_mnuAbout_activate(self, w=None):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  246','line':'        "Display the about dialogue"','coverage':'           : ',},
{'lineNum':'  247','line':'        about = gtk.AboutDialog()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  248','line':'        about.set_name(PROGRAM_NAME)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  249','line':'        about.set_version("v%s" % (PROGRAM_VERSION) )','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  250','line':'        about.set_copyright("(C) Simon Kagstrom, 2006-2011")','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  251','line':'        about.set_website(PROGRAM_URL)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  252','line':'        about.run()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  253','line':'        about.hide()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  254','line':'','coverage':'           : ',},
{'lineNum':'  255','line':'    def redisplayFunction(self):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  256','line':'        try:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  257','line':'            fnCursor = self.functionView.get_cursor()[0]','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  258','line':'            curFunction = self.functionView.get_model()[fnCursor][3]','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  259','line':'        except TypeError:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  260','line':'            # There is no function currently being shown','coverage':'           : ',},
{'lineNum':'  261','line':'            return','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  262','line':'        insnCursor = self.instructionView.get_cursor()[0]','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  263','line':'        curInstruction = None','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  264','line':'        if insnCursor:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  265','line':'            curInstruction = self.instructionView.get_model()[insnCursor][self.instructionModel.COLUMN_INSTRUCTION]','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  266','line':'','coverage':'           : ',},
{'lineNum':'  267','line':'        self.instructionModel.setCurInstruction(curInstruction)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  268','line':'        self.instructionModel.refreshModel()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  269','line':'        try:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  270','line':'            self.instructionView.set_cursor(insnCursor)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  271','line':'            self.instructionView.scroll_to_cell(insnCursor)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  272','line':'        except: # If nothing is selected this will fail','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  273','line':'            pass','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  274','line':'','coverage':'           : ',},
{'lineNum':'  275','line':'    def on_actionShowSource_toggled(self, action):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  276','line':'        if self.loading:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  277','line':'            return','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  278','line':'        config.showHighLevelCode = not config.showHighLevelCode','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  279','line':'        config.save()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  280','line':'        try:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  281','line':'            fnCursor = self.functionView.get_cursor()[0]','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  282','line':'            curFunction = self.functionView.get_model()[fnCursor][3]','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  283','line':'        except TypeError:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  284','line':'            # There is no function currently being shown','coverage':'           : ',},
{'lineNum':'  285','line':'            return','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  286','line':'        model = self.instructionView.get_model()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  287','line':'        curpath = self.instructionView.get_cursor()[0]','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  288','line':'        try:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  289','line':'            curaddr = model[curpath][self.instructionModel.COLUMN_INSTRUCTION].address','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  290','line':'        except:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  291','line':'            curaddr = None','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  292','line':'        self.instructionView.set_model( InstructionModel.InfoModel(curFunction).getModel() )','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  293','line':'        if curaddr:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  294','line':'            self.lookupFunction(curaddr)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  295','line':'','coverage':'           : ',},
{'lineNum':'  296','line':'    def on_actionShowInformationBox_toggled(self, widget):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  297','line':'        if self.loading:','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  298','line':'            return','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  299','line':'        config.showInstructionInformationBox = not config.showInstructionInformationBox','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  300','line':'        config.save()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  301','line':'        self.setInformationBoxVisible()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  302','line':'','coverage':'           : ',},
{'lineNum':'  303','line':'    def setInformationBoxVisible(self):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  304','line':'        if config.showInstructionInformationBox:','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  305','line':'            self.vboxInfoBox.show()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  306','line':'        else:','coverage':'           : ',},
{'lineNum':'  307','line':'            self.vboxInfoBox.hide()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  308','line':'','coverage':'           : ',},
{'lineNum':'  309','line':'    def on_mnuPreferences_activate(self, widget):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  310','line':'        pd = PreferencesDialogue(self)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  311','line':'','coverage':'           : ',},
{'lineNum':'  312','line':'    def enableValueAnalysis(self, builder):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  313','line':'        global enable_value_analysis','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  314','line':'        if not enable_value_analysis:','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  315','line':'            mnuValueAnalysis = builder.get_object(\'mnuValueAnalysis\')','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  316','line':'            mnuValueAnalysis.set_sensitive(False)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  317','line':'','coverage':'           : ',},
{'lineNum':'  318','line':'    def on_mnuValueAnalysis_activate(self, widget):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  319','line':'        print \'Doing value analysis\'','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  320','line':'        self.valueAnalysisInfoProvider.analyse()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  321','line':'        print \'Done\'','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  322','line':'','coverage':'           : ',},
{'lineNum':'  323','line':'    def patternMatchBinCallback(self, entry, comboBox):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  324','line':'        markPattern = entry.get_text()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  325','line':'        self.searchwordHighlighter.setSearchPattern(markPattern)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  326','line':'        self.redisplayFunction()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  327','line':'        self.instructionView.grab_focus()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  328','line':'','coverage':'           : ',},
{'lineNum':'  329','line':'    def lookupFunction(self, val):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  330','line':'        function = self.fileContainer.lookup(val)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  331','line':'        history.disable()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  332','line':'','coverage':'           : ',},
{'lineNum':'  333','line':'        if function != None:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  334','line':'            model = self.functionView.get_model()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  335','line':'            self.functionView.set_cursor_on_cell(model.get_path(function.iter))','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  336','line':'            self.functionView.row_activated(model.get_path(function.iter), self.functionController.viewColumns[0])','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  337','line':'','coverage':'           : ',},
{'lineNum':'  338','line':'            # Return if this was just a label lookup','coverage':'           : ',},
{'lineNum':'  339','line':'            if isinstance(val, str):','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  340','line':'                history.enable()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  341','line':'                return True','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  342','line':'            insn = function.lookup(val)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  343','line':'','coverage':'           : ',},
{'lineNum':'  344','line':'            if insn != None:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  345','line':'                model = self.instructionView.get_model()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  346','line':'                self.instructionView.set_cursor_on_cell(model.get_path(insn.iter))','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  347','line':'            history.enable()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  348','line':'            return True','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  349','line':'','coverage':'           : ',},
{'lineNum':'  350','line':'        history.enable()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  351','line':'        return False','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  352','line':'','coverage':'           : ',},
{'lineNum':'  353','line':'    def addPasteBinEntry(self, comboBox, txt):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  354','line':'        """Add an entry to the pasteBin ComboBox. If the same entry is already','coverage':'           : ',},
{'lineNum':'  355','line':'there, promote it to the top of the list"""','coverage':'           : ',},
{'lineNum':'  356','line':'        count = 0','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  357','line':'        found = -1','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  358','line':'        for item in iter(comboBox.get_model()):','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  359','line':'            if item[0] == txt:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  360','line':'                found = count','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  361','line':'            count = count + 1','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  362','line':'','coverage':'           : ',},
{'lineNum':'  363','line':'        # If it\'s found, remove it from the list','coverage':'           : ',},
{'lineNum':'  364','line':'        if found != -1:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  365','line':'            comboBox.remove_text(found)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  366','line':'','coverage':'           : ',},
{'lineNum':'  367','line':'        # ... and add it again','coverage':'           : ',},
{'lineNum':'  368','line':'        comboBox.prepend_text(txt)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  369','line':'','coverage':'           : ',},
{'lineNum':'  370','line':'    def lookupWord(self, word):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  371','line':'        """Lookup a word /address"""','coverage':'           : ',},
{'lineNum':'  372','line':'        # Special-case Linux crashes','coverage':'           : ',},
{'lineNum':'  373','line':'        r = linuxKernelCrashRegexp.match(word)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  374','line':'        if r != None:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  375','line':'            fn_name = r.group(1)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  376','line':'            fn_addend = r.group(2)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  377','line':'            function = self.fileContainer.lookup(fn_name)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  378','line':'','coverage':'           : ',},
{'lineNum':'  379','line':'            if function != None:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  380','line':'                val=function.address + long(fn_addend, 16)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  381','line':'                if self.lookupFunction( val ):','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  382','line':'                    history.add(val)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  383','line':'            return','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  384','line':'','coverage':'           : ',},
{'lineNum':'  385','line':'        try:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  386','line':'            # Try to convert to a number (handle some common cases)','coverage':'           : ',},
{'lineNum':'  387','line':'            word = word.strip("[]+():-/|><")','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  388','line':'            val = long(word, 16)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  389','line':'        except:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  390','line':'            val = word','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  391','line':'        if self.lookupFunction(val):','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  392','line':'            history.add(val)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  393','line':'','coverage':'           : ',},
{'lineNum':'  394','line':'    def pasteBinEntryActivated(self, entry, comboBox):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  395','line':'        """','coverage':'           : ',},
{'lineNum':'  396','line':'        Called to lookup a symbol / address. Looks up a label or an','coverage':'           : ',},
{'lineNum':'  397','line':'        address.','coverage':'           : ',},
{'lineNum':'  398','line':'        """','coverage':'           : ',},
{'lineNum':'  399','line':'        txt = entry.get_text()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  400','line':'','coverage':'           : ',},
{'lineNum':'  401','line':'        self.addPasteBinEntry(comboBox, txt)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  402','line':'','coverage':'           : ',},
{'lineNum':'  403','line':'        # Split the input in words and navigate to them','coverage':'           : ',},
{'lineNum':'  404','line':'        for word in txt.split():','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  405','line':'            self.lookupWord(word)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  406','line':'','coverage':'           : ',},
{'lineNum':'  407','line':'    def pasteBinChanged(self, comboBox, usr):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  408','line':'        """','coverage':'           : ',},
{'lineNum':'  409','line':'        Called when an entry in the paste bin list is selected','coverage':'           : ',},
{'lineNum':'  410','line':'        """','coverage':'           : ',},
{'lineNum':'  411','line':'        which = comboBox.get_active()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  412','line':'        if which != -1:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  413','line':'            txt = comboBox.get_model()[which][0]','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  414','line':'            self.addPasteBinEntry(comboBox, txt)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  415','line':'            for word in txt.split():','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  416','line':'                self.lookupWord(word)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  417','line':'','coverage':'           : ',},
{'lineNum':'  418','line':'    def clearInstructionInfo(self):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  419','line':'        self.infoBox.set_markup(\'<b>Not available</b>\')','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  420','line':'','coverage':'           : ',},
{'lineNum':'  421','line':'    def updateInstructionInfo(self, instruction):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  422','line':'        # Check if this architecture supports instruction info','coverage':'           : ',},
{'lineNum':'  423','line':'        if not hasattr(self.fileContainer.getArch(), "getInstructionInfo"):','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  424','line':'            self.clearInstructionInfo()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  425','line':'            return','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  426','line':'        instrInfo = self.fileContainer.getArch().getInstructionInfo(instruction)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  427','line':'','coverage':'           : ',},
{'lineNum':'  428','line':'        valueAnalysisInfo = ""','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  429','line':'        try:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  430','line':'            valueAnalysisInfo = self.valueAnalysisInfoProvider.getInstructionInfo(instruction)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  431','line':'        except AttributeError, e:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  432','line':'            # Set above','coverage':'           : ',},
{'lineNum':'  433','line':'            pass','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  434','line':'','coverage':'           : ',},
{'lineNum':'  435','line':'        self.infoBox.set_markup(','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  436','line':'            \'<b>\' + instrInfo.get(\'shortinfo\', \'\') + "</b><br />\\n\\n" +','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  437','line':'            instrInfo.get(\'description\', \'\').replace(\'\\n\', \'<br />\\n\') + "\\n" +','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  438','line':'            \'<p>\' + valueAnalysisInfo + \'</p>\'','coverage':'           : ',},
{'lineNum':'  439','line':'            )','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  440','line':'','coverage':'           : ',},
{'lineNum':'  441','line':'    def searchCommon(self, entity, key):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  442','line':'        key = key.lower()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  443','line':'        comp1 = ("0x%08x" % entity.address).lower()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  444','line':'        comp2 = entity.getLabel().lower()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  445','line':'        if isinstance(entity, Instruction):','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  446','line':'            comp3 = entity.getOpcode() + entity.getArgs()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  447','line':'        else:','coverage':'           : ',},
{'lineNum':'  448','line':'            comp3 = ""','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  449','line':'','coverage':'           : ',},
{'lineNum':'  450','line':'        # Lookup either the address or the label when doing an interactive','coverage':'           : ',},
{'lineNum':'  451','line':'        # search','coverage':'           : ',},
{'lineNum':'  452','line':'        if comp1.find(key) != -1 or comp2.find(key) != -1 or comp3.find(key) != -1:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  453','line':'            return False','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  454','line':'        return True','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  455','line':'','coverage':'           : ',},
{'lineNum':'  456','line':'    def run(self):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  457','line':'        """ run is called to set off the GTK mainloop """','coverage':'           : ',},
{'lineNum':'  458','line':'        gtk.main()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  459','line':'        return','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  460','line':'','coverage':'           : ',},
{'lineNum':'  461','line':'class FunctionViewController:','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  462','line':'    """ Controls the Function TreeView """','coverage':'           : ',},
{'lineNum':'  463','line':'','coverage':'           : ',},
{'lineNum':'  464','line':'    def __init__(self, controller, treeview, instructionController):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  465','line':'        self.controller = controller','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  466','line':'        self.functionView = treeview','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  467','line':'        self.instructionController = instructionController','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  468','line':'','coverage':'           : ',},
{'lineNum':'  469','line':'        self.setupFunctionView()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  470','line':'','coverage':'           : ',},
{'lineNum':'  471','line':'    def setupFunctionView(self):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  472','line':'        """ Sets up the columns to be displayed """','coverage':'           : ',},
{'lineNum':'  473','line':'','coverage':'           : ',},
{'lineNum':'  474','line':'        # setup the cell renderers','coverage':'           : ',},
{'lineNum':'  475','line':'        self.functionRenderer = gtk.CellRendererText()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  476','line':'        self.functionRenderer.set_property("font", "Monospace")','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  477','line':'','coverage':'           : ',},
{'lineNum':'  478','line':'        self.functionView.connect( \'row-activated\', self.functionRowActivated)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  479','line':'        self.functionView.set_search_column(0)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  480','line':'        self.functionView.set_search_equal_func(self.functionSearchCallback)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  481','line':'','coverage':'           : ',},
{'lineNum':'  482','line':'        self.viewColumns = {}','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  483','line':'        # Connect column0 of the display with column 0 in our list model','coverage':'           : ',},
{'lineNum':'  484','line':'        # The renderer will then display whatever is in column 0 of','coverage':'           : ',},
{'lineNum':'  485','line':'        # our model .','coverage':'           : ',},
{'lineNum':'  486','line':'        self.viewColumns[0] = gtk.TreeViewColumn("Address", self.functionRenderer, markup=0)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  487','line':'        self.viewColumns[1] = gtk.TreeViewColumn("Size", self.functionRenderer, markup=1)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  488','line':'        self.viewColumns[2] = gtk.TreeViewColumn("Label", self.functionRenderer, markup=2)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  489','line':'','coverage':'           : ',},
{'lineNum':'  490','line':'        # The columns active state is attached to the second column','coverage':'           : ',},
{'lineNum':'  491','line':'        # in the model.  So when the model says True then the button','coverage':'           : ',},
{'lineNum':'  492','line':'        # will show as active e.g on.','coverage':'           : ',},
{'lineNum':'  493','line':'        for col in self.viewColumns.values():','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  494','line':'            self.functionView.append_column( col )','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  495','line':'','coverage':'           : ',},
{'lineNum':'  496','line':'    def functionSearchCallback(self, model, column, key, iter):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  497','line':'        """','coverage':'           : ',},
{'lineNum':'  498','line':'        Callback for interactive searches.','coverage':'           : ',},
{'lineNum':'  499','line':'        """','coverage':'           : ',},
{'lineNum':'  500','line':'        entity = model[iter][3]','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  501','line':'        return self.controller.searchCommon(entity, key)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  502','line':'','coverage':'           : ',},
{'lineNum':'  503','line':'    def functionRowActivated( self, view, iter, path):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  504','line':'        """','coverage':'           : ',},
{'lineNum':'  505','line':'        Run when one row is selected (double-click/space)','coverage':'           : ',},
{'lineNum':'  506','line':'        """','coverage':'           : ',},
{'lineNum':'  507','line':'        model = self.functionView.get_model()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  508','line':'        entity = model[iter][3]','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  509','line':'        entity.link()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  510','line':'        history.add(entity.address)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  511','line':'','coverage':'           : ',},
{'lineNum':'  512','line':'        self.instructionController.setInstructionModel(entity)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  513','line':'','coverage':'           : ',},
{'lineNum':'  514','line':'class InstructionViewController:','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  515','line':'    """ Controls the Instruction TreeView """','coverage':'           : ',},
{'lineNum':'  516','line':'','coverage':'           : ',},
{'lineNum':'  517','line':'    def __init__(self, controller, treeview):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  518','line':'        self.controller = controller','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  519','line':'        self.insnView = treeview','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  520','line':'','coverage':'           : ',},
{'lineNum':'  521','line':'        self.setupInstructionView()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  522','line':'','coverage':'           : ',},
{'lineNum':'  523','line':'    def setupInstructionView(self):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  524','line':'        # setup the cell renderers','coverage':'           : ',},
{'lineNum':'  525','line':'        link_renderer = gtk.CellRendererPixbuf()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  526','line':'','coverage':'           : ',},
{'lineNum':'  527','line':'        insnRenderer = gtk.CellRendererText()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  528','line':'        addressRenderer = gtk.CellRendererText()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  529','line':'        callDstRenderer = gtk.CellRendererText()','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  530','line':'','coverage':'           : ',},
{'lineNum':'  531','line':'        addressRenderer.set_property("font", "Monospace")','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  532','line':'        insnRenderer.set_property("font", "Monospace")','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  533','line':'        insnRenderer.set_property("width", 500)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  534','line':'        link_renderer.set_property("width", 22)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  535','line':'        link_renderer.set_property("height", 22)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  536','line':'        insnRenderer.set_property("height", 22)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  537','line':'        insnRenderer.set_property("editable", True)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  538','line':'        insnRenderer.connect("edited", self.insnCommentEdited, self.insnView)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  539','line':'        insnRenderer.connect("editing-started", self.insnCommentEditStart, self.insnView)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  540','line':'        callDstRenderer.set_property("font", "Monospace")','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  541','line':'','coverage':'           : ',},
{'lineNum':'  542','line':'        self.insnView.connect( \'row-activated\', self.insnRowActivated)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  543','line':'        self.insnView.connect_after( \'move-cursor\', self.insnMoveCursor)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  544','line':'        self.insnView.connect( \'cursor-changed\', self.insnCursorChanged )','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  545','line':'        self.insnView.connect( \'key-press-event\', self.insnKeyPress )','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  546','line':'        self.insnView.set_search_column(0)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  547','line':'        self.insnView.set_search_equal_func(self.insnSearchCallback)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  548','line':'','coverage':'           : ',},
{'lineNum':'  549','line':'        self.insnColumns = {}','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  550','line':'        # Connect column0 of the display with column 0 in our list model','coverage':'           : ',},
{'lineNum':'  551','line':'        # The renderer will then display whatever is in column 0 of','coverage':'           : ',},
{'lineNum':'  552','line':'        # our model .','coverage':'           : ',},
{'lineNum':'  553','line':'        self.insnColumns[0] = gtk.TreeViewColumn("Address", addressRenderer, markup=0)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  554','line':'        self.insnColumns[1] = gtk.TreeViewColumn("b0", link_renderer, pixbuf=1)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  555','line':'        self.insnColumns[2] = gtk.TreeViewColumn("b1", link_renderer, pixbuf=2)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  556','line':'        self.insnColumns[3] = gtk.TreeViewColumn("b2", link_renderer, pixbuf=3)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  557','line':'        self.insnColumns[4] = gtk.TreeViewColumn("Instruction", insnRenderer, markup=4)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  558','line':'        self.insnColumns[4].set_resizable(True)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  559','line':'        self.insnColumns[5] = gtk.TreeViewColumn("f0", link_renderer, pixbuf=5)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  560','line':'        self.insnColumns[6] = gtk.TreeViewColumn("f1", link_renderer, pixbuf=6)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  561','line':'        self.insnColumns[7] = gtk.TreeViewColumn("f2", link_renderer, pixbuf=7)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  562','line':'        self.insnColumns[8] = gtk.TreeViewColumn("Target", callDstRenderer, markup=8)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  563','line':'','coverage':'           : ',},
{'lineNum':'  564','line':'        # The columns active state is attached to the second column','coverage':'           : ',},
{'lineNum':'  565','line':'        # in the model.  So when the model says True then the button','coverage':'           : ',},
{'lineNum':'  566','line':'        # will show as active e.g on.','coverage':'           : ',},
{'lineNum':'  567','line':'        for col in self.insnColumns.values():','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  568','line':'            self.insnView.append_column( col )','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  569','line':'','coverage':'           : ',},
{'lineNum':'  570','line':'    def setInstructionModel(self, functionEntity):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  571','line':'        """','coverage':'           : ',},
{'lineNum':'  572','line':'        Change the instruction model.','coverage':'           : ',},
{'lineNum':'  573','line':'        """','coverage':'           : ',},
{'lineNum':'  574','line':'        self.controller.instructionModel = InstructionModel.InfoModel(functionEntity,','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  575','line':'            highlighters=self.controller.highlighters)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  576','line':'        model = self.controller.instructionModel.getModel()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  577','line':'        self.insnView.set_model( model )','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  578','line':'','coverage':'           : ',},
{'lineNum':'  579','line':'        self.insnView.grab_focus()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  580','line':'        self.insnView.set_cursor(0)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  581','line':'','coverage':'           : ',},
{'lineNum':'  582','line':'    def insnSearchCallback(self, model, column, key, iter):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  583','line':'        """','coverage':'           : ',},
{'lineNum':'  584','line':'        Callback for interactive searches.','coverage':'           : ',},
{'lineNum':'  585','line':'        """','coverage':'           : ',},
{'lineNum':'  586','line':'        entity = model[iter][self.controller.instructionModel.COLUMN_INSTRUCTION]','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  587','line':'        if isinstance(entity, StrEntity):','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  588','line':'            return True','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  589','line':'        return self.controller.searchCommon(entity, key)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  590','line':'','coverage':'           : ',},
{'lineNum':'  591','line':'    def insnKeyPress(self, view, event):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  592','line':'        if event.string == \';\':','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  593','line':'            view.set_cursor(view.get_cursor()[0], focus_column=self.insnColumns[4], start_editing=True)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  594','line':'            return True','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  595','line':'','coverage':'           : ',},
{'lineNum':'  596','line':'    def insnCommentEditStart(self, insnRenderer, editable, path, insnView):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  597','line':'        model = insnView.get_model()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  598','line':'        iter = model.get_iter_from_string(path)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  599','line':'        insn = model[iter][self.controller.instructionModel.COLUMN_INSTRUCTION]','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  600','line':'        editable.set_text(insn.comment)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  601','line':'','coverage':'           : ',},
{'lineNum':'  602','line':'    def insnCommentEdited(self, insnRenderer, path, new_text, view):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  603','line':'        model = view.get_model()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  604','line':'        iter = model.get_iter_from_string(path)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  605','line':'        insn = model[iter][self.controller.instructionModel.COLUMN_INSTRUCTION]','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  606','line':'        insn.comment = new_text','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  607','line':'        view.set_cursor(view.get_cursor()[0], focus_column=self.insnColumns[0], start_editing=False)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  608','line':'','coverage':'           : ',},
{'lineNum':'  609','line':'    def insnCursorChanged(self, view):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  610','line':'        model = view.get_model()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  611','line':'        cur = model[view.get_cursor()[0]][self.controller.instructionModel.COLUMN_INSTRUCTION]','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  612','line':'        if isinstance(cur, Instruction):','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  613','line':'            self.controller.updateInstructionInfo(cur)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  614','line':'            self.controller.instructionModel.setCurInstruction(cur)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  615','line':'            self.controller.instructionModel.refreshModel()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  616','line':'        else:','coverage':'           : ',},
{'lineNum':'  617','line':'            self.controller.clearInstructionInfo()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  618','line':'','coverage':'           : ',},
{'lineNum':'  619','line':'    def insnMoveCursor(self, view, step, count):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  620','line':'        model = view.get_model()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  621','line':'        if not model:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  622','line':'            return True','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  623','line':'        curpath = view.get_cursor()[0][0]','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  624','line':'        origpath = view.get_cursor()[0][0]','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  625','line':'','coverage':'           : ',},
{'lineNum':'  626','line':'        if step == gtk.MOVEMENT_DISPLAY_LINES:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  627','line':'            #Find next Instruction','coverage':'           : ',},
{'lineNum':'  628','line':'            try:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  629','line':'                while not isinstance(model[curpath][self.controller.instructionModel.COLUMN_INSTRUCTION],','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  630','line':'                    Instruction):','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  631','line':'                    curpath = curpath + count','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  632','line':'            except IndexError:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  633','line':'                #Reverse move','coverage':'           : ',},
{'lineNum':'  634','line':'                curpath = origpath - count','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  635','line':'            if curpath < 0:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  636','line':'                #Reverse move','coverage':'           : ',},
{'lineNum':'  637','line':'                curpath = origpath - count','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  638','line':'            view.set_cursor(curpath)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  639','line':'        return True','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  640','line':'','coverage':'           : ',},
{'lineNum':'  641','line':'    def insnRowActivated( self, view, iter, path):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  642','line':'        """','coverage':'           : ',},
{'lineNum':'  643','line':'        Run when one row is selected (double-click/space)','coverage':'           : ',},
{'lineNum':'  644','line':'        """','coverage':'           : ',},
{'lineNum':'  645','line':'        model = view.get_model()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  646','line':'        functionModel = self.controller.functionView.get_model()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  647','line':'        try:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  648','line':'            entity = model[iter][self.controller.instructionModel.COLUMN_INSTRUCTION]','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  649','line':'        except IndexError:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  650','line':'            # If the index is outside of the model','coverage':'           : ',},
{'lineNum':'  651','line':'            return','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  652','line':'        if isinstance(entity, Instruction) and entity.hasLink():','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  653','line':'            link = entity.getOutLink()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  654','line':'            history.add(entity.address)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  655','line':'            if isinstance(link, Function):','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  656','line':'                history.add(link.address)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  657','line':'                dst = link','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  658','line':'                self.controller.functionView.set_cursor_on_cell(functionModel.get_path(dst.iter))','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  659','line':'                self.controller.functionView.row_activated(functionModel.get_path(dst.iter), self.controller.functionController.viewColumns[0])','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  660','line':'                view.set_cursor_on_cell(0)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  661','line':'            else:','coverage':'           : ',},
{'lineNum':'  662','line':'                func = entity.getFunction()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  663','line':'                dst = func.lookup(link.address)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  664','line':'                if dst != None:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  665','line':'                    history.add(dst.address)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  666','line':'                    view.set_cursor(model.get_path(dst.iter))','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  667','line':'','coverage':'           : ',},
{'lineNum':'  668','line':'def usage():','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  669','line':'    print "Usage: %s -h [FILE]" % (PROGRAM_NAME.lower())','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  670','line':'    print "Disassemble FILE and open in a graphical window.\\n"','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  671','line':'    print "  -t BASE_ADDRESS       Set the start address for the disassembled file (.text segment)"','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  672','line':'    print "  -h                    Display this help and exit"','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  673','line':'    sys.exit(1)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  674','line':'','coverage':'           : ',},
{'lineNum':'  675','line':'baseAddress = 0','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  676','line':'if __name__ == "__main__":','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  677','line':'    optlist, args = getopt.gnu_getopt(sys.argv[1:], "ht:")','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  678','line':'','coverage':'           : ',},
{'lineNum':'  679','line':'    for opt, arg in optlist:','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  680','line':'        if opt == "-h":','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  681','line':'            usage()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  682','line':'        if opt == "-t":','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  683','line':'            try:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  684','line':'                baseAddress = long(arg)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  685','line':'            except:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  686','line':'                try:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  687','line':'                    baseAddress = long(arg, 16)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  688','line':'                except:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  689','line':'                    raise','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  690','line':'    if len(args) == 0:','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  691','line':'        filename = None','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  692','line':'    else:','coverage':'           : ',},
{'lineNum':'  693','line':'        filename = args[0]','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'  694','line':'','coverage':'           : ',},
{'lineNum':'  695','line':'    myGUI = GUI_Controller(filename)','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'  696','line':'    myGUI.run()','class':'lineCov','coverage':'  1 /   1  : ',},
];
var merged_data = [];
