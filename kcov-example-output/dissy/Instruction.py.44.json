var percent_low = 25;var percent_high = 75;
var header = { 'command' : 'dissy', 'date' : '2014-06-09 19:17:46', 'instrumented' : 56, 'covered' : 15,};
var data = [
{'lineNum':'    1','line':'######################################################################','coverage':'           : ',},
{'lineNum':'    2','line':'##','coverage':'           : ',},
{'lineNum':'    3','line':'## Copyright (C) 2006,  Blekinge Institute of Technology','coverage':'           : ',},
{'lineNum':'    4','line':'##','coverage':'           : ',},
{'lineNum':'    5','line':'## Author:        Simon Kagstrom <simon.kagstrom@gmail.com>','coverage':'           : ',},
{'lineNum':'    6','line':'## Description:   Instruction class','coverage':'           : ',},
{'lineNum':'    7','line':'##','coverage':'           : ',},
{'lineNum':'    8','line':'## Licensed under the terms of GNU General Public License version 2','coverage':'           : ',},
{'lineNum':'    9','line':'## (or later, at your option). See COPYING file distributed with Dissy','coverage':'           : ',},
{'lineNum':'   10','line':'## for full text of the license.','coverage':'           : ',},
{'lineNum':'   11','line':'##','coverage':'           : ',},
{'lineNum':'   12','line':'######################################################################','coverage':'           : ',},
{'lineNum':'   13','line':'from dissy.Entity import Entity, AddressableEntity','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   14','line':'','coverage':'           : ',},
{'lineNum':'   15','line':'class Instruction(AddressableEntity):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   16','line':'    def __init__(self, function, address, encoding, opcode, args):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   17','line':'        AddressableEntity.__init__(self, address = address, endAddress = address, baseAddress = function.baseAddress)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   18','line':'        self.function = function','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   19','line':'        self.encoding = encoding','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   20','line':'        self.opcode = opcode','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   21','line':'        self.args = args','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   22','line':'        self.outLinkAddress = None','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   23','line':'        self.outLink = None','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   24','line':'        self.comment = \'\'','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   25','line':'        arch = self.function.getFile().getArch()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   26','line':'','coverage':'           : ',},
{'lineNum':'   27','line':'        if arch.isJump(opcode):','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   28','line':'            val = arch.getJumpDestination(address, opcode, args)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   29','line':'            if val != None:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   30','line':'                self.addLinkOut( val + self.baseAddress )','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   31','line':'','coverage':'           : ',},
{'lineNum':'   32','line':'    def getFunction(self):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   33','line':'        return self.function','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   34','line':'','coverage':'           : ',},
{'lineNum':'   35','line':'    def getOpcode(self):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   36','line':'        return self.opcode','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   37','line':'','coverage':'           : ',},
{'lineNum':'   38','line':'    def getArgs(self):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   39','line':'        if self.args != None:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   40','line':'            return self.args','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   41','line':'        return ""','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   42','line':'','coverage':'           : ',},
{'lineNum':'   43','line':'    def getOutLinkAddress(self):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   44','line':'        return self.outLinkAddress','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   45','line':'','coverage':'           : ',},
{'lineNum':'   46','line':'    def getOutLink(self):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   47','line':'        return self.outLink','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   48','line':'','coverage':'           : ',},
{'lineNum':'   49','line':'    def getInLinks(self):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   50','line':'        return self.inLink','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   51','line':'','coverage':'           : ',},
{'lineNum':'   52','line':'    def hasLink(self):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   53','line':'        return self.outLinkAddress != None','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   54','line':'','coverage':'           : ',},
{'lineNum':'   55','line':'    def addLinkIn(self, insn):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   56','line':'        pass # Implement this if needed','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   57','line':'        #self.linksIn.append(insn)','coverage':'           : ',},
{'lineNum':'   58','line':'','coverage':'           : ',},
{'lineNum':'   59','line':'    def addLinkOut(self, obj):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   60','line':'        self.outLinkAddress = obj','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   61','line':'','coverage':'           : ',},
{'lineNum':'   62','line':'    def linkTo(self, other):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   63','line':'        self.outLink = other','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   64','line':'','coverage':'           : ',},
{'lineNum':'   65','line':'    def link(self):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   66','line':'        if not self.hasLink():','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   67','line':'            raise Exception','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   68','line':'        other = self.function.lookup(self.getOutLinkAddress())','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   69','line':'        if other:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   70','line':'            self.linkTo(other)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   71','line':'            other.addLinkIn(self)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   72','line':'        else:','coverage':'           : ',},
{'lineNum':'   73','line':'            # External reference','coverage':'           : ',},
{'lineNum':'   74','line':'            other = self.function.getFile().lookup(self.getOutLinkAddress())','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   75','line':'            self.linkTo(other)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   76','line':'            if other == None:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   77','line':'                return False','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   78','line':'            self.label = other.getLabel()','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   79','line':'        return True','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   80','line':'','coverage':'           : ',},
{'lineNum':'   81','line':'    def __str__(self):','class':'lineCov','coverage':'  1 /   1  : ',},
{'lineNum':'   82','line':'        out = ("0x%08x " % self.address) + " " + str(self.opcode)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   83','line':'        if self.args != None:','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   84','line':'            out += str(" " * (20-len(out))) + str(self.args)','class':'lineNoCov','coverage':'  0 /   1  : ',},
{'lineNum':'   85','line':'        return out','class':'lineNoCov','coverage':'  0 /   1  : ',},
];
var merged_data = [];
